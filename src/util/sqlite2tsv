#!/bin/sh
#
# Fetch a SQL result from SQLite
# and store it in TSV format
# without extra carriage returns and newlines,
# and replacing NULL with the empty string.
# Uses `sed` and `qsv` for formatting.
#
# Example: ./sqlite2tsv app.db "SELECT * FROM epitope ORDER BY epitope_id" iedb/epitope.tsv

SQLITE_DATABASE=${1:?'Please specify the SQLite database'}
SQLITE_QUERY=${2:?'Please include a SQL query string or filename'}
TSV_FILE=${3:?'Please provide a TSV file name'}

# Maybe read query from file
if [ -f "${SQLITE_QUERY}" ]; then
  SQLITE_QUERY=$(cat "${SQLITE_QUERY}")
fi

command -v sqlite3 > /dev/null || fail 'Please install sqlite3'
command -v qsv > /dev/null || PATH="bin:$PATH"
command -v qsv > /dev/null || fail 'Please install qsv'

sqlite3 \
  "${SQLITE_DATABASE}" \
  ".headers on" \
  ".mode tabs" \
  "${SQLITE_QUERY}" \
| sed "s/\r//g" \
| sed "s/\n/ /g" \
| qsv replace --quiet \
  --delimiter '\t' \
  --output "${TSV_FILE}" \
  'NULL' '' \
|| exit 0
